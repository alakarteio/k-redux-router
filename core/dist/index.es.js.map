{"version":3,"file":"index.es.js","sources":["../src/actions.js","../src/middleware/routeFound.js","../src/middleware/dispatchResult/dispatchResult.js","../src/middleware/dispatchResult/mapQueryToObject.js","../src/middleware/mapAction/mapAction.js","../src/middleware/mapAction/toQueryString.js","../src/selectors.js","../src/init.js","../src/getFullHrefVersion/isRoute.js","../src/factory.js","../src/getFullHrefVersion/getFullHrefVersion.js","../src/reducer.js","../src/middleware/middleware.js"],"sourcesContent":["const navigate = type => (code, pathParams, queryParams) => ({\n  type,\n  payload: {\n    code,\n    params: {\n      path: pathParams,\n      query: queryParams,\n    },\n  },\n})\n\nexport const push = navigate('@@router/PUSH')\nexport const replace = navigate('@@router/REPLACE')\nexport const goBack = (times = 1) => ({ type: '@@router/GO_BACK', payload: times })\nexport const goForward = (times = 1) => ({ type: '@@router/GO_FORWARD', payload: times })\n","const type = '@@router/ROUTE_FOUND'\n\nexport default Object.assign(\n  result => ({ type, payload: Object.assign({ found: true }, result) }),\n  {\n    type,\n  },\n)\n","import routeFound from '../routeFound'\nimport mapQueryToObject from './mapQueryToObject'\n\nexport default (options, reducer) => (store) => {\n  const innerWindow = options.window || window\n\n  if (innerWindow && innerWindow.location && innerWindow.location.pathname) {\n    // find route (& path params)\n    let pathParams\n    const route = reducer.getState(store.getState()).routes.array.find((r) => {\n      console.log({ r, pathname: innerWindow.location.pathname })\n      pathParams = r.href.regexp.exec(innerWindow.location.pathname)\n      return !!pathParams\n    })\n\n    console.log({ route })\n    // TODO: handle not found\n    if (!route) return\n\n    // attach names to path params\n    pathParams = route.href.parsed\n      .map(part => part.name)\n      .filter(Boolean)\n      .reduce(\n        (acc, curr, index) => Object.assign({ [curr]: pathParams[index + 1] }, acc),\n        {},\n      )\n\n    store.dispatch(routeFound({\n      route,\n      params: {\n        path: pathParams,\n        query: mapQueryToObject(innerWindow),\n      },\n    }))\n  }\n}\n","/* eslint-env browser */\n\n// https://stackoverflow.com/questions/8648892/convert-url-parameters-to-a-javascript-object\nexport default (window) => {\n  const { location } = window\n\n  if (location.search.length < 2) return {}\n\n  const search = location.search.substring(1)\n  return JSON.parse(`{\"${decodeURI(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"')}\"}`)\n}\n","/* eslint-env browser */\nimport routeFound from '../routeFound'\nimport toQueryString from './toQueryString'\n\nexport default (options, reducer) => {\n  const {\n    history,\n  } = options\n\n  return store => (action) => {\n    const { type, payload } = action\n\n    switch (type) {\n      case '@@router/GO_FORWARD': {\n        history.go(payload)\n        return undefined\n      }\n      case '@@router/GO_BACK': {\n        history.go(payload * -1)\n        return undefined\n      }\n      case '@@router/REPLACE':\n      case '@@router/PUSH': {\n        const { code, params } = payload\n\n        // find route\n        const route = reducer.getState(store.getState()).routes.map[code]\n\n        // update history API\n        if (route) {\n          const { href } = route\n          let queryPart = ''\n\n          let toPush = href.base\n          if (href.compiled) toPush = href.compiled(params.path)\n          if (params.query) queryPart = `?${toQueryString(params.query)}`\n\n          toPush = `${toPush}${queryPart}`\n          if (type === '@@router/PUSH') history.pushState(undefined, undefined, toPush)\n          else history.replaceState(undefined, undefined, toPush)\n        }\n\n        // TODO: if no route, find the closest `notFound` to push it in `result`\n\n        // update state\n        return routeFound({\n          route,\n          params,\n        })\n      }\n      // default is undefined so we avoid infinite loop\n      default: return undefined\n    }\n  }\n}\n","// https://stackoverflow.com/questions/1714786/query-string-encoding-of-a-javascript-object\nexport default obj => Object.keys(obj).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`).join('&')\n","export default (getState) => {\n  const getRoute = code => state => getState(state).routes.map[code]\n  const getResult = state => getState(state).result\n  const getCurrentRoute = state => getResult(state).route\n  const getCurrentCode = state => getCurrentRoute(state).code\n  const isFound = state => getResult(state).found\n  const getParams = state => getResult(state).params\n  const getPathParams = state => getParams(state).path\n  const getQueryParams = state => getParams(state).query\n  const getPathParam = code => state => getPathParams(state)[code]\n  const getQueryParam = code => state => getQueryParams(state)[code]\n  const getParam = code => state => getPathParam(code)(state) || getQueryParam(code)(state)\n\n  return {\n    getState,\n    getRoute,\n    getResult,\n    getCurrentCode,\n    getCurrentRoute,\n    isFound,\n    getParams,\n    getPathParams,\n    getQueryParams,\n    getPathParam,\n    getQueryParam,\n    getParam,\n  }\n}\n","export default () => ({ type: '@@router/INIT' })\n","export default route => typeof route === 'object' && route.code\n","/* eslint-env browser */\nimport middleware from './middleware'\nimport reducer from './reducer'\nimport init from './init'\nimport getFullHrefVersion from './getFullHrefVersion'\n\nconst defaultOptions = {\n  history: window && window.history,\n}\n\nexport default (routes, options = defaultOptions) => {\n  const innerOptions = {\n    ...defaultOptions,\n    ...options,\n  }\n\n  // get history implementation (default is window.history _this is history API_)\n  if (!innerOptions.history) throw new Error('[k-redux-router] no history implementation is given')\n\n  // transform route\n  const innerRoutes = { array: getFullHrefVersion(routes) }\n  innerRoutes.map = innerRoutes.array.reduce(\n    (acc, curr) => Object.assign({}, acc, { [curr.code]: curr }),\n    {},\n  )\n\n  // implementations\n  const reducerImpl = reducer(innerRoutes, innerOptions)\n  return ({\n    middleware: middleware(innerRoutes, innerOptions, reducerImpl),\n    reducer: reducerImpl,\n    init,\n  })\n}\n","import pathToRegexp from 'path-to-regexp'\nimport isRoute from './isRoute'\n\nexport default (routes) => {\n  const fullVersion = []\n\n  const addRoute = (base, parent, route) => {\n    // parameters to copy from parent to route\n    let propertiesToCopy = {}\n    if (parent) {\n      propertiesToCopy = Object\n        .entries(parent)\n        // eslint-disable-next-line no-unused-vars\n        .filter(([key, value]) => !isRoute(value)) // remove children routes\n        .reduce(\n          (acc, [key, value]) => Object.assign(acc, { [key]: value }),\n          {},\n        )\n    }\n\n    // process href and add to array\n    let innerRoute = route\n    if (parent) {\n      innerRoute = Object.assign(\n        propertiesToCopy,\n        route,\n        {\n          parent: parent && parent.code,\n          href: {\n            base,\n            compiled: (base.includes(':') ? pathToRegexp.compile(base) : undefined),\n            regexp: pathToRegexp(base),\n            parsed: pathToRegexp.parse(base),\n          },\n        },\n      )\n\n      fullVersion.push(innerRoute)\n    }\n\n    // process children\n    Object\n      .entries(route)\n      .filter(([key, value]) => isRoute(value)) // eslint-disable-line no-unused-vars\n      .forEach(([href, childRoute]) => addRoute([base, href].join('').replace('//', '/'), innerRoute, childRoute))\n  }\n\n  // start the graph\n  addRoute('', undefined, routes)\n\n  // update links\n  fullVersion.forEach((route) => {\n    // children\n    Object\n      .entries(route)\n      .forEach(([key, value]) => {\n        let newValue = value\n        if (isRoute(value)) newValue = value.code\n\n        route[key] = newValue // eslint-disable-line no-param-reassign\n      })\n  })\n\n  return fullVersion\n}\n","import * as actions from './actions'\nimport selectors from './selectors'\n\nexport default (routes, options = {}) => {\n  // init redux state\n  const initState = Object.assign(\n    {},\n    {\n      routes,\n      result: { found: false },\n    },\n  )\n\n  const reducer = (state = initState, { type, payload } = {}) => {\n    switch (type) {\n      case '@@router/ROUTE_FOUND': return Object.assign({}, state, { result: payload })\n      default: return state\n    }\n  }\n\n  // selectors\n  Object.assign(reducer, selectors(options.getState || (state => state.ui.router)))\n\n  // actions\n  Object.assign(reducer, actions)\n\n  return reducer\n}\n","/* eslint-env browser */\nimport dispatchResultFactory from './dispatchResult'\nimport mapActionFactory from './mapAction'\nimport routeFound from './routeFound'\n\nexport default (routes, options, reducer) => {\n  let initialized = false\n  const dispatchResult = dispatchResultFactory(options, reducer)\n  const mapAction = mapActionFactory(options, reducer)\n\n  // redux middleware\n  return store => next => (action) => {\n    // these action are not catched by the middleware and are used as it is\n    if (!action.type || !action.type.startsWith('@@router/')) return next(action)\n\n    // dispatch base action so other lib and reducer can plug to it\n    const res = next(action)\n\n    // init watchers (location/INIT)\n    // - this is done here because we can't dispatch when middlewares tree is initialized by redux\n    // - so we make sure that the dispatch are done when we are initialized\n    if (action.type === '@@router/INIT') { // TODO: do like routeFound.type\n      dispatchResult(store) // TODO: move to store.dispatch pattern\n\n      if (initialized) {\n        console.warn('[k-redux-router] initialized twice') // eslint-disable-line no-console\n      } else {\n        initialized = true\n\n        // watcher (location)\n        // TODO: make it pure\n        window.onpopstate = () => { dispatchResult(store) } // TODO: move to store.dispatch pattern\n      }\n    }\n\n    if (!initialized && action.type !== routeFound.type) console.warn('[k-redux-router] router should be initialized') // eslint-disable-line no-console\n\n    // router actions can found a new route\n    const newAction = mapAction(store)(action)\n    if (newAction) store.dispatch(newAction)\n\n    return res\n  }\n}\n"],"names":["const","navigate","type","code","pathParams","queryParams","payload","params","path","query","times","Object","assign","result","found","options","reducer","store","innerWindow","window","location","pathname","let","route","getState","routes","array","find","r","console","log","href","regexp","exec","parsed","map","part","name","filter","Boolean","reduce","acc","curr","index","dispatch","routeFound","search","length","substring","JSON","parse","decodeURI","replace","mapQueryToObject","history","action","obj","go","queryPart","toPush","base","compiled","keys","k","encodeURIComponent","join","pushState","undefined","replaceState","getResult","state","getCurrentRoute","getParams","getPathParams","getQueryParams","getPathParam","getQueryParam","defaultOptions","innerOptions","Error","innerRoutes","fullVersion","addRoute","parent","propertiesToCopy","entries","ref","isRoute","innerRoute","includes","pathToRegexp","compile","push","forEach","childRoute","key","value","newValue","getFullHrefVersion","reducerImpl","initState","selectors","ui","router","actions","middleware","initialized","dispatchResult","dispatchResultFactory","mapAction","mapActionFactory","next","startsWith","res","warn","onpopstate","newAction","init"],"mappings":"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"}