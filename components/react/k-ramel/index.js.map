{"version":3,"file":"index.js","sources":["src/hoc.jsx","src/link/link.jsx","src/link/link.container.js","src/driver.js"],"sourcesContent":["import React from 'react'\n\n// TODO: factorize code with react-redux\nconst getDisplayName = Component => `router(${\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n})`\n\nconst isRouteFound = code => result => result && [].concat(code).includes(result.code)\n\nconst hoc = (code, options) => Component => class extends React.Component {\n  static displayName = getDisplayName(Component)\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = { show: false }\n  }\n\n  componentWillMount() {\n    // subscribe\n    this.unsubscribe = this.context.store.subscribe(() => {\n      this.toShow()\n    })\n\n    // run in once\n    this.toShow()\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  toShow = () => {\n    const { router } = this.context.store.drivers\n\n    // TODO: hardcoded path (state.ui)\n    if (!router.getState() || !router.getResult()) {\n      // eslint-disable-next-line no-console\n      console.error('[k-redux-router] | There is no route found in `state.ui.router.result`')\n      return\n    }\n\n    // Absolute mode, we are looking in top level only\n    let currentRoute = router.getCurrentRoute()\n    if (options && options.absolute) {\n      const show = (code === currentRoute.code)\n      if (show !== this.state.show) {\n        this.setState(innerState => ({ ...innerState, show }))\n      }\n\n      return\n    }\n\n    // Either way we are looking top down the result tree\n    let show = (code === currentRoute.code)\n    while (currentRoute && currentRoute.parent && !show) {\n      currentRoute = router.getRoute(currentRoute.parent)\n      show = (code === currentRoute.code)\n    }\n\n    if (show !== this.state.show) {\n      this.setState(innerState => ({ ...innerState, show }))\n    }\n  }\n\n  render() {\n    if (!this.state.show) return null\n\n    return <Component {...this.props} />\n  }\n}\n\nhoc.absolute = (code, options) => hoc(code, { ...options, absolute: true })\n\nexport default hoc\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// TODO: factorize code with react-redux\nconst Link = (props) => {\n  const {\n    href,\n    onClick,\n    ...params,\n  } = props\n\n  const {\n    className,\n    children\n  } = params\n\n  // TODO: factorise code from middleware and from here\n  let queryPart = ''\n  let processedHref = href.base\n  if (href.compiled) processedHref = href.compiled(params)\n  if (params.query) queryPart = `?${toQueryString(params.query)}`\n  processedHref = `${processedHref}${queryPart}`\n\n  return (\n    <a\n      className={className}\n      href={processedHref}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  )\n}\n\nLink.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  href: PropTypes.shape({\n    base: PropTypes.string,\n    compiled: PropTypes.func,\n  }),\n  onClick: PropTypes.func,\n}\n\nLink.defaultProps = {\n  className: undefined,\n  children: undefined,\n  href: undefined,\n  onClick: undefined,\n}\n\nexport default Link\n","import { inject } from '@k-ramel/react'\nimport Component from './link'\n\n// copied from redux-little-router\n// - this part is about letting user make CTRL+CLICK (example)\n// - but keep the push-history-api available when we do a simple click\nconst LEFT_MOUSE_BUTTON = 0\nconst isNotLeftClick = e => e.button && e.button !== LEFT_MOUSE_BUTTON\nconst hasModifier = e => !!(e.shiftKey || e.altKey || e.metaKey || e.ctrlKey)\nconst shouldIgnoreClick = e => hasModifier(e) || isNotLeftClick(e) || e.defaultPrevented\n\n// map store TODO: use driver (since we are in k-ramel)\nconst mapStore = (store, { onClick, code, query, ...params }, { router }) => ({\n  href: router.getRoute(code).href,\n  onClick: (e) => {\n    // parent onClick callback\n    if (onClick) onClick(e)\n\n    // from redux-little-router\n    if (shouldIgnoreClick(e)) return\n\n    // dispatch the push\n    router.push(code, params, query)\n\n    // prevent default behaviour\n    e.preventDefault()\n  },\n})\n\nexport default inject(mapStore)(Component)\n","import factory, { selectors, actions } from '@k-redux-router/core'\nimport { applyMiddleware } from 'k-ramel'\n\nexport default (options = {}) => {\n  const {\n    routes,\n    path = 'ui.router',\n    getState = state => state.ui.router,\n  } = options\n\n  const { middleware, reducer, init } = factory(routes, { getState })\n\n  return {\n    getDriver: store => ({\n      // actions\n      ...Object\n        .entries(actions)\n        .reduce(\n          (acc, [key, action]) => ({\n            ...acc,\n            [key]: (...args) => store.dispatch(action(...args)),\n          }),\n          {},\n        ),\n      // selectors\n      ...Object.\n        entries(selectors(getState))\n        .reduce(\n          (acc, [key, selector]) => {\n            let fn = () => selector(store.getState())\n            if (['getRoute', 'getPathParam', 'getQueryParam' ,'getParam' ].includes(key)) {\n              fn = (...args) => selector(...args)(store.getState())\n            }\n\n            return ({\n              ...acc,\n              [key]: fn,\n            })\n          },\n          {},\n        )\n    }),\n    getReducer: () => ({ path, reducer }),\n    getEnhancer: () => applyMiddleware(middleware),\n    init: store => { store.dispatch(init()) },\n  }\n}\n"],"names":["hoc","code","options","props","context","toShow","router","_this","store","drivers","getState","getResult","currentRoute","getCurrentRoute","absolute","show","state","setState","innerState","parent","getRoute","error","React","Component","unsubscribe","this","subscribe","displayName","name","constructor","getDisplayName","contextTypes","Link","href","onClick","params","className","children","queryPart","processedHref","base","compiled","query","toQueryString","propTypes","PropTypes","string","node","shape","func","defaultProps","undefined","inject","e","shiftKey","altKey","metaKey","ctrlKey","hasModifier","button","isNotLeftClick","defaultPrevented","shouldIgnoreClick","push","preventDefault","routes","path","ui","factory","middleware","reducer","init","Object","entries","actions","reduce","acc","key","action","dispatch","selectors","selector","fn","includes","applyMiddleware"],"mappings":"m2DAYMA,EAAM,SAACC,EAAMC,UAAY,sDAOjBC,EAAOC,4EACXD,EAAOC,aAmBfC,OAAS,eACCC,EAAWC,EAAKH,QAAQI,MAAMC,QAA9BH,UAGHA,EAAOI,YAAeJ,EAAOK,iBAO9BC,EAAeN,EAAOO,qBACtBX,GAAWA,EAAQY,cACfC,EAAQd,IAASW,EAAaX,KAChCc,IAASR,EAAKS,MAAMD,QACjBE,SAAS,wBAAoBC,GAAYH,wBAO9CA,EAAQd,IAASW,EAAaX,KAC3BW,GAAgBA,EAAaO,SAAWJ,KAC9BT,EAAOc,SAASR,EAAaO,UACpClB,IAASW,EAAaX,KAG5Bc,IAASR,EAAKS,MAAMD,QACjBE,SAAS,wBAAoBC,GAAYH,yBAvBtCM,MAAM,6EAvBXL,OAAUD,MAAM,wUAViCO,EAAMC,2EAevDC,YAAcC,KAAKrB,QAAQI,MAAMkB,UAAU,aACzCrB,gBAIFA,6DAIAmB,sDAqCAC,KAAKT,MAAMD,KAETO,gBAACC,EAAcE,KAAKtB,OAFE,gBA5DxBwB,YAVc,6BACrBJ,EAAUI,aACPJ,EAAUK,MACTL,EAAUM,aAAeN,EAAUM,YAAYD,MAChD,eAMkBE,CAAeP,KAE7BQ,oBACE,kBAAM,WA+DjB/B,EAAIc,SAAW,SAACb,EAAMC,UAAYF,EAAIC,OAAWC,GAASY,UAAU,MC3EpE,IAAMkB,EAAO,SAAC7B,OAEV8B,EAGE9B,EAHF8B,KACAC,EAEE/B,EAFF+B,QACGC,IACDhC,sBAGFiC,EAEED,EAFFC,UACAC,EACEF,EADFE,SAIEC,EAAY,GACZC,EAAgBN,EAAKO,YACrBP,EAAKQ,WAAUF,EAAgBN,EAAKQ,SAASN,IAC7CA,EAAOO,QAAOJ,MAAgBK,cAAcR,EAAOO,aACpCH,EAAgBD,EAGjChB,+BACac,OACLG,UACGL,OAOfF,EAAKY,qBACQC,EAAUC,gBACXD,EAAUE,UACdF,EAAUG,YACRH,EAAUC,gBACND,EAAUI,eAEbJ,EAAUI,MAGrBjB,EAAKkB,6BACQC,gBACDA,YACJA,eACGA,GC1CX,MAuBeC,SAjBE,SAAC5C,WAAS0B,IAAAA,QAASjC,IAAAA,KAAMyC,IAAAA,MAAUP,kCAAY7B,IAAAA,mBACxDA,EAAOc,SAASnB,GAAMgC,aACnB,SAACoB,GAEJnB,GAASA,EAAQmB,GAPC,mBADN,qBAAQA,EAAEC,UAAYD,EAAEE,QAAUF,EAAEG,SAAWH,EAAEI,SACtCC,CAAYL,IAFpB,mBAAKA,EAAEM,QADJ,IACcN,EAAEM,OAEOC,CAAeP,IAAMA,EAAEQ,iBAUhEC,CAAkBT,OAGfU,KAAK9D,EAAMkC,EAAQO,KAGxBsB,qBAISZ,CAAiB7B,2BC1BhBrB,4DAEZ+D,EAGE/D,EAHF+D,SAGE/D,EAFFgE,KAAAA,aAAO,gBAELhE,EADFQ,SAAAA,aAAW,mBAASM,EAAMmD,GAAG7D,YAGO8D,EAAQH,GAAUvD,aAAhD2D,IAAAA,WAAYC,IAAAA,QAASC,IAAAA,sBAGhB,wBAENC,OACAC,QAAQC,WACRC,OACC,SAACC,kBAAMC,OAAKC,mBACPF,OACFC,EAAM,kBAAarE,EAAMuE,SAASD,mCAKtCN,OACDC,QAAQO,YAAUtE,IACjBiE,OACC,SAACC,kBAAMC,OAAKI,OACNC,EAAK,kBAAMD,EAASzE,EAAME,oBACzB,WAAY,eAAgB,gBAAiB,YAAayE,SAASN,OACjE,kBAAaI,yBAAAA,CAAkBzE,EAAME,mBAIvCkE,OACFC,EAAMK,sBAML,kBAAShB,OAAMI,wBACd,kBAAMc,kBAAgBf,SAC7B,cAAiBU,SAASR"}