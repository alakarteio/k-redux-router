{"version":3,"file":"index.es.js","sources":["../src/driver.js","../src/hoc.jsx","../src/link/link.jsx","../src/link/link.container.js"],"sourcesContent":["import factory, { selectors, actions } from '@k-redux-router/core'\nimport { applyMiddleware } from 'k-ramel'\n\nexport default (options = {}) => {\n  const {\n    routes,\n    path = 'ui.router',\n    getState = state => state.ui.router,\n  } = options\n\n  const { middleware, reducer, init } = factory(routes, { getState })\n\n  return {\n    getDriver: store => ({\n      // actions\n      ...Object\n        .entries(actions)\n        .reduce(\n          (acc, [key, action]) => ({\n            ...acc,\n            [key]: (...args) => store.dispatch(action(...args)),\n          }),\n          {},\n        ),\n      // selectors\n      ...Object.\n        entries(selectors(getState))\n        .reduce(\n          (acc, [key, selector]) => {\n            let fn = () => selector(store.getState())\n            if (['getRoute', 'getPathParam', 'getQueryParam' ,'getParam' ].includes(key)) {\n              fn = (...args) => selector(...args)(store.getState())\n            }\n\n            return ({\n              ...acc,\n              [key]: fn,\n            })\n          },\n          {},\n        )\n    }),\n    getReducer: () => ({ path, reducer }),\n    getEnhancer: () => applyMiddleware(middleware),\n    init: store => { store.dispatch(init()) },\n  }\n}\n","import React from 'react'\n\n// TODO: factorize code with react-redux\nconst getDisplayName = Component => `router(${\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n})`\n\nconst isRouteFound = code => result => result && [].concat(code).includes(result.code)\n\nconst hoc = (code, options) => Component => class extends React.Component {\n  static displayName = getDisplayName(Component)\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = { show: false }\n  }\n\n  componentWillMount() {\n    // subscribe\n    this.unsubscribe = this.context.store.subscribe(() => {\n      this.toShow()\n    })\n\n    // run in once\n    this.toShow()\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  toShow = () => {\n    const { router } = this.context.store.drivers\n\n    // TODO: hardcoded path (state.ui)\n    if (!router.getState() || !router.getResult()) {\n      // eslint-disable-next-line no-console\n      console.error('[k-redux-router] | There is no route found in `state.ui.router.result`')\n      return\n    }\n\n    // Absolute mode, we are looking in top level only\n    let currentRoute = router.getCurrentRoute()\n    if (options && options.absolute) {\n      const show = (code === currentRoute.code)\n      if (show !== this.state.show) {\n        this.setState(innerState => ({ ...innerState, show }))\n      }\n\n      return\n    }\n\n    // Either way we are looking top down the result tree\n    let show = (code === currentRoute.code)\n    while (currentRoute && currentRoute.parent && !show) {\n      currentRoute = router.getRoute(currentRoute.parent)\n      show = (code === currentRoute.code)\n    }\n\n    if (show !== this.state.show) {\n      this.setState(innerState => ({ ...innerState, show }))\n    }\n  }\n\n  render() {\n    if (!this.state.show) return null\n\n    return <Component {...this.props} />\n  }\n}\n\nhoc.absolute = (code, options) => hoc(code, { ...options, absolute: true })\n\nexport default hoc\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// TODO: factorize code with react-redux\nconst Link = (props) => {\n  const {\n    href,\n    onClick,\n    ...params,\n  } = props\n\n  const {\n    className,\n    children\n  } = params\n\n  // TODO: factorise code from middleware and from here\n  let queryPart = ''\n  let processedHref = href.base\n  if (href.compiled) processedHref = href.compiled(params)\n  if (params.query) queryPart = `?${toQueryString(params.query)}`\n  processedHref = `${processedHref}${queryPart}`\n\n  return (\n    <a\n      className={className}\n      href={processedHref}\n      onClick={onClick}\n    >\n      {children}\n    </a>\n  )\n}\n\nLink.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  href: PropTypes.shape({\n    base: PropTypes.string,\n    compiled: PropTypes.func,\n  }),\n  onClick: PropTypes.func,\n}\n\nLink.defaultProps = {\n  className: undefined,\n  children: undefined,\n  href: undefined,\n  onClick: undefined,\n}\n\nexport default Link\n","import { inject } from '@k-ramel/react'\nimport Component from './link'\n\n// copied from redux-little-router\n// - this part is about letting user make CTRL+CLICK (example)\n// - but keep the push-history-api available when we do a simple click\nconst LEFT_MOUSE_BUTTON = 0\nconst isNotLeftClick = e => e.button && e.button !== LEFT_MOUSE_BUTTON\nconst hasModifier = e => !!(e.shiftKey || e.altKey || e.metaKey || e.ctrlKey)\nconst shouldIgnoreClick = e => hasModifier(e) || isNotLeftClick(e) || e.defaultPrevented\n\n// map store TODO: use driver (since we are in k-ramel)\nconst mapStore = (store, { onClick, code, query, ...params }, { router }) => ({\n  href: router.getRoute(code).href,\n  onClick: (e) => {\n    // parent onClick callback\n    if (onClick) onClick(e)\n\n    // from redux-little-router\n    if (shouldIgnoreClick(e)) return\n\n    // dispatch the push\n    router.push(code, params, query)\n\n    // prevent default behaviour\n    e.preventDefault()\n  },\n})\n\nexport default inject(mapStore)(Component)\n"],"names":["options","routes","path","getState","state","ui","router","factory","middleware","reducer","init","Object","entries","actions","reduce","acc","key","action","store","dispatch","selectors","selector","fn","includes","applyMiddleware","getDisplayName","Component","displayName","name","constructor","hoc","code","props","context","toShow","_this","drivers","getResult","currentRoute","getCurrentRoute","absolute","show","setState","innerState","parent","getRoute","error","unsubscribe","this","subscribe","React","contextTypes","Link","href","onClick","params","className","children","queryPart","processedHref","base","compiled","query","toQueryString","propTypes","PropTypes","string","node","shape","func","defaultProps","undefined","LEFT_MOUSE_BUTTON","isNotLeftClick","e","button","hasModifier","shiftKey","altKey","metaKey","ctrlKey","shouldIgnoreClick","defaultPrevented","mapStore","push","preventDefault","inject"],"mappings":"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"}